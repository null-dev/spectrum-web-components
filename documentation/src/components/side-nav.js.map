{"version":3,"file":"side-nav.js","sourceRoot":"","sources":["side-nav.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;EAUE;AACF,OAAO,EACH,UAAU,EACV,IAAI,EAEJ,QAAQ,GAGX,MAAM,aAAa,CAAC;AACrB,OAAO,gDAAgD,CAAC;AACxD,OAAO,qDAAqD,CAAC;AAE7D,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,sBAAsB,CAAC;AAC9B,OAAO,EAAE,MAAM,EAAU,MAAM,mBAAmB,CAAC;AACnD,OAAO,aAAa,MAAM,gBAAgB,CAAC;AAC3C,OAAO,iBAAiB,CAAC;AAEzB,MAAM,OAAQ,SAAQ,UAAU;IAAhC;;QAMW,SAAI,GAAG,KAAK,CAAC;QAGZ,eAAU,GAAa,EAAE,CAAC;IA8GtC,CAAC;IAtHU,MAAM,KAAK,MAAM;QACpB,OAAO,CAAC,aAAa,CAAC,CAAC;IAC3B,CAAC;IAQO,YAAY,CAChB,KAAuC,EACvC,IAA6B;QAE7B,MAAM,IAAI,GAAG,SAAS,CAAC,UAAU,CAAC,IAAI,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QACpE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAEO,qBAAqB,CACzB,KAAuC;QAEvC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;IAC3C,CAAC;IAEO,iBAAiB,CAAC,KAAuC;QAC7D,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACvC,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,YAAY;QACd,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC;QAC/B,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC;QACnE,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC;YACrC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE;IACL,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAA;wCACqB,IAAI,CAAC,MAAM;;;;;;;;;;;;;;;;;;;;8CAoBL,IAAI,CAAC,qBAAqB;;;8BAG1C,IAAI,CAAC,UAAU,CAAC,GAAG,CACjB,CAAC,IAAI,EAAE,EAAE,CACL,IAAI,CAAA;;qDAEa,IAAI,CAAC,IAAI;qDACT,IAAI,CAAC,KAAK;;qCAE1B,CACR;;;;;8CAKiB,IAAI,CAAC,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA+B3D,CAAC;IACN,CAAC;IAED,OAAO,CAAC,OAAuB;QAC3B,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAC1D,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;SAC1C;IACL,CAAC;CACJ;AAjHG;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;qCACvB;AAGpB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;2CACQ;AAgHtC,cAAc,CAAC,MAAM,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC","sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport {\n    LitElement,\n    html,\n    CSSResultArray,\n    property,\n    PropertyValues,\n    TemplateResult,\n} from 'lit-element';\nimport '@spectrum-web-components/sidenav/sp-sidenav.js';\nimport '@spectrum-web-components/sidenav/sp-sidenav-item.js';\nimport { SidenavSelectDetail } from '@spectrum-web-components/sidenav';\nimport { AppRouter } from '../router.js';\nimport './side-nav-search.js';\nimport { search, Result } from './search-index.js';\nimport sideNavStyles from './side-nav.css';\nimport './adobe-logo.js';\n\nclass SideNav extends LitElement {\n    public static get styles(): CSSResultArray {\n        return [sideNavStyles];\n    }\n\n    @property({ type: Boolean, reflect: true })\n    public open = false;\n\n    @property({ type: Array })\n    private components: Result[] = [];\n\n    private handleSelect(\n        event: CustomEvent<SidenavSelectDetail>,\n        kind: 'guides' | 'components'\n    ): void {\n        const path = AppRouter.urlForPath(`/${kind}/${event.detail.value}`);\n        AppRouter.go(path);\n    }\n\n    private handleComponentSelect(\n        event: CustomEvent<SidenavSelectDetail>\n    ): void {\n        this.handleSelect(event, 'components');\n    }\n\n    private handleGuideSelect(event: CustomEvent<SidenavSelectDetail>): void {\n        this.handleSelect(event, 'guides');\n    }\n\n    public toggle() {\n        this.open = !this.open;\n    }\n\n    async firstUpdated(): Promise<void> {\n        const docs = await search('*');\n        const components = docs.find((item) => item.name === 'components');\n        if (components) {\n            this.components = components.results;\n            components.results.sort((a, b) => (a.name < b.name ? -1 : 1));\n        }\n    }\n\n    render(): TemplateResult {\n        return html`\n            <div class=\"scrim\" @click=${this.toggle}></div>\n            <aside>\n                <div id=\"nav-header\">\n                    <div id=\"logo-container\">\n                        <a href=\"#\">\n                            <docs-spectrum-logo></docs-spectrum-logo>\n                            <div id=\"header-title\">\n                                Spectrum\n                                <br />\n                                Web Components\n                            </div>\n                        </a>\n                    </div>\n                    <docs-search></docs-search>\n                </div>\n                <div id=\"navigation\">\n                    <sp-sidenav manage-tab-index>\n                        <sp-sidenav-item\n                            label=\"Components\"\n                            expanded\n                            @sidenav-select=${this.handleComponentSelect}\n                            multilevel\n                        >\n                            ${this.components.map(\n                                (item) =>\n                                    html`\n                                        <sp-sidenav-item\n                                            value=\"${item.name}\"\n                                            label=\"${item.label}\"\n                                        ></sp-sidenav-item>\n                                    `\n                            )}\n                        </sp-sidenav-item>\n                        <sp-sidenav-item\n                            label=\"Contributing\"\n                            expanded\n                            @sidenav-select=${this.handleGuideSelect}\n                            multilevel\n                        >\n                            <sp-sidenav-item\n                                value=\"adding-component\"\n                                label=\"Adding Components\"\n                            ></sp-sidenav-item>\n                            <sp-sidenav-item\n                                value=\"spectrum-config\"\n                                label=\"Spectrum Config Reference\"\n                            ></sp-sidenav-item>\n                        </sp-sidenav-item>\n                        <sp-sidenav-item\n                            label=\"Playground\"\n                            href=\"storybook/index.html\"\n                            multilevel\n                        ></sp-sidenav-item>\n                        <sp-sidenav-item\n                            class=\"spectrum-web\"\n                            label=\"Spectrum\"\n                            href=\"https://spectrum.adobe.com/\"\n                            target=\"_blank\"\n                        ></sp-sidenav-item>\n                        <sp-sidenav-item\n                            label=\"Spectrum CSS\"\n                            href=\"https://opensource.adobe.com/spectrum-css/\"\n                            target=\"_blank\"\n                        ></sp-sidenav-item>\n                    </sp-sidenav>\n                </div>\n            </aside>\n        `;\n    }\n\n    updated(changes: PropertyValues) {\n        if (changes.has('open') && !this.open && changes.get('open')) {\n            this.dispatchEvent(new Event('close'));\n        }\n    }\n}\n\ncustomElements.define('docs-side-nav', SideNav);\n"]}