{"version":3,"file":"code-example.js","sourceRoot":"","sources":["../../../src/components/code-example.ts"],"names":[],"mappings":"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","sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    LitElement,\n    html,\n    customElement,\n    TemplateResult,\n    CSSResultArray,\n    property,\n    css,\n    query,\n} from 'lit-element';\nimport { toHtmlTemplateString } from '../utils/templates.js';\nimport DarkThemeStyles from 'prismjs/themes/prism-okaidia.css';\nimport LightThemeStyles from 'prismjs/themes/prism.css';\nimport Styles from './code-example.css';\n\nclass Code extends LitElement {\n    @property()\n    public code: string = '';\n\n    get highlightedCode(): TemplateResult {\n        return toHtmlTemplateString(this.code);\n    }\n\n    protected render(): TemplateResult {\n        return html`\n            <pre><code>${this.highlightedCode}</code></pre>\n        `;\n    }\n}\n\n@customElement('dark-code')\nexport class DarkCode extends Code {\n    public static get styles(): CSSResultArray {\n        return [\n            DarkThemeStyles,\n            css`\n                .token.constant,\n                .token.deleted,\n                .token.property,\n                .token.symbol,\n                .token.tag {\n                    color: #f9a4c3;\n                }\n            `,\n        ];\n    }\n}\n\n@customElement('light-code')\nexport class LightCode extends Code {\n    public static get styles(): CSSResultArray {\n        return [\n            LightThemeStyles,\n            css`\n                .token.attr-name,\n                .token.builtin,\n                .token.char,\n                .token.inserted,\n                .token.selector,\n                .token.string {\n                    color: #567f01;\n                }\n                .token.punctuation {\n                    color: #737373;\n                }\n                .language-css .token.function {\n                    color: inherit;\n                }\n            `,\n        ];\n    }\n}\n\n@customElement('code-example')\nexport class CodeExample extends LitElement {\n    @query('#markup')\n    private markup?: HTMLDivElement;\n\n    @query('.demo-example')\n    private demo?: HTMLDivElement;\n\n    @property()\n    public codeTheme: 'dark' | 'light' = 'light';\n\n    @property({ type: Boolean })\n    public preprocessed = false;\n\n    private prismjsLoaded = false;\n\n    public static get styles(): CSSResultArray {\n        return [Styles];\n    }\n\n    private get codeSlot(): Element | this {\n        const code = [...(this.children || [])].find(\n            (child) => child.slot === 'code'\n        );\n        return code || this;\n    }\n\n    public get highlightedHTML(): string {\n        const el = this.codeSlot;\n        return el.innerHTML || '';\n    }\n\n    public get liveHTML(): string {\n        const el = this.codeSlot;\n        return el.textContent || '';\n    }\n\n    public get language(): 'markup' | 'javascript' {\n        if (this.classList.contains('language-javascript')) {\n            return 'javascript';\n        }\n        return 'markup';\n    }\n\n    public get showDemo() {\n        return (\n            this.classList.contains('language-html') ||\n            this.classList.contains('language-html-live')\n        );\n    }\n\n    private get highlightedCode(): TemplateResult {\n        const highlightedHTML = this.preprocessed\n            ? this.highlightedHTML\n            : window.Prism.highlight(\n                  this.liveHTML,\n                  window.Prism.languages[this.language],\n                  this.language\n              );\n\n        if (this.codeTheme === 'dark') {\n            return html`\n                <dark-code .code=${highlightedHTML}></dark-code>\n            `;\n        }\n        return html`\n            <light-code .code=${highlightedHTML}></light-code>\n        `;\n    }\n\n    private get renderedCode(): TemplateResult {\n        if (this.classList.contains('language-html-live')) {\n            const demo =\n                this.querySelector('[slot=\"demo\"]') ||\n                document.createElement('div');\n            demo.slot = 'demo';\n            demo.innerHTML = this.liveHTML;\n            this.append(demo);\n        }\n        return toHtmlTemplateString(this.liveHTML);\n    }\n\n    protected shouldUpdate(): boolean {\n        if (this.preprocessed || this.prismjsLoaded) {\n            return true;\n        }\n        if (!this.preprocessed) {\n            import('prismjs').then(() => {\n                this.prismjsLoaded = true;\n                this.requestUpdate();\n            });\n        }\n        return false;\n    }\n\n    protected render(): TemplateResult {\n        // highlighedCode needs to happen first in case the HTML is live and\n        // needs to be placed into the light DOM\n        const { highlightedCode, renderedCode } = this;\n        return html`\n            ${this.showDemo\n                ? html`\n                      <div class=\"demo-example\">\n                          <slot name=\"demo\">\n                              ${renderedCode}\n                          </slot>\n                      </div>\n                  `\n                : undefined}\n            <div class=\"markup\">\n                ${highlightedCode}\n            </div>\n        `;\n    }\n\n    private shouldManageTabOrderForScrolling = (): void => {\n        [this.markup, this.demo].map((el) => {\n            if (!el) return;\n            const { offsetWidth, scrollWidth } = el;\n            if (offsetWidth < scrollWidth) {\n                el.tabIndex = 0;\n            } else {\n                el.removeAttribute('tabindex');\n            }\n        });\n    };\n\n    protected updated(): void {\n        setTimeout(this.shouldManageTabOrderForScrolling);\n    }\n\n    public connectedCallback(): void {\n        super.connectedCallback();\n        window.addEventListener(\n            'resize',\n            this.shouldManageTabOrderForScrolling\n        );\n    }\n\n    public disconnectedCallback(): void {\n        window.removeEventListener(\n            'resize',\n            this.shouldManageTabOrderForScrolling\n        );\n        super.disconnectedCallback();\n    }\n}\n"]}