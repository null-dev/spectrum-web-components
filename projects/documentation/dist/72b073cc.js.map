{"version":3,"file":"72b073cc.js","sources":["../_site/src/components/side-nav-search.js","../_site/src/components/side-nav.js","../_site/src/components/adobe-logo.js","../_site/src/utils/templates.js","../_site/src/components/code-example.js","../_site/src/components/layout.js"],"sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { __decorate } from \"tslib\";\nimport { LitElement, html, property, query, customElement, } from 'lit-element';\nimport sideNavSearchMenuStyles from './side-nav-search.css';\nimport '@spectrum-web-components/search/sp-search.js';\nconst stopPropagation = (event) => event.stopPropagation();\nconst preventDefault = (event) => event.preventDefault();\nlet SearchComponent = /** @class */ (() => {\n    let SearchComponent = class SearchComponent extends LitElement {\n        constructor() {\n            super(...arguments);\n            this.searchResultsPopover = null;\n            this.results = [];\n        }\n        static get styles() {\n            return [sideNavSearchMenuStyles];\n        }\n        focus() {\n            this.searchField.focus();\n        }\n        handleSearchInput(event) {\n            if (event.target) {\n                const { value } = event.target;\n                this.updateSearchResults(value);\n            }\n        }\n        handleKeydown(event) {\n            const { code, shiftKey } = event;\n            const willFocusResultsList = !shiftKey && code === 'Tab';\n            const shouldFocusResultsList = code === 'ArrowDown';\n            const focusResultsList = willFocusResultsList || shouldFocusResultsList;\n            if (!focusResultsList) {\n                return;\n            }\n            this.focusResults({ willFocusResultsList, shouldFocusResultsList });\n        }\n        handlePopoverKeydown(event) {\n            const { code, shiftKey } = event;\n            if (code === 'Tab') {\n                if (shiftKey) {\n                    this.focusReturn.focus();\n                }\n                else {\n                    this.focus();\n                }\n            }\n        }\n        async focusResults({ willFocusResultsList, shouldFocusResultsList, }) {\n            await this.updateComplete;\n            if (this.searchResultsPopover) {\n                if (shouldFocusResultsList) {\n                    const popoverMenu = this.searchResultsPopover.querySelector('sp-menu');\n                    popoverMenu.focus();\n                }\n                else {\n                    this.searchResultsPopover.focus();\n                }\n            }\n            else if (shouldFocusResultsList) {\n                const resultsAvailable = await this.updateSearchResults(this.searchField.value);\n                if (resultsAvailable) {\n                    this.focusResults({ shouldFocusResultsList });\n                }\n            }\n        }\n        async openPopover() {\n            if (!this.popover)\n                return;\n            this.searchResultsPopover = this.popover;\n            const { popover } = this;\n            await import('@spectrum-web-components/overlay').then(async ({ Overlay }) => {\n                this.closeOverlay = await Overlay.open(this, 'click', popover, {\n                    placement: 'bottom',\n                });\n            });\n            await this.searchResultsPopover.updateComplete;\n        }\n        closePopover() {\n            if (this.closeOverlay) {\n                this.closeOverlay();\n            }\n        }\n        handleClosed() {\n            this.searchResultsPopover = null;\n            if (this.closeOverlay) {\n                delete this.closeOverlay;\n            }\n        }\n        async updateSearchResults(value) {\n            if (value.length < 3) {\n                this.closePopover();\n                return false;\n            }\n            const search = await import('./search-index.js').then((searchIndex) => {\n                return searchIndex.search;\n            });\n            const searchParam = `${value.trim()}*`;\n            this.results = await search(searchParam);\n            await this.openPopover();\n            return this.results.length > 0;\n        }\n        onFocusout(event) {\n            const relatedTarget = event.relatedTarget;\n            if (relatedTarget &&\n                this.searchResultsPopover &&\n                this.shadowRoot &&\n                !this.shadowRoot.contains(relatedTarget) &&\n                !this.searchResultsPopover.contains(relatedTarget)) {\n                this.closePopover();\n            }\n        }\n        renderResults() {\n            if (this.results.length > 0) {\n                return html `\n                <sp-menu>\n                    ${this.results.map((category) => html `\n                            <sp-menu-group>\n                                <span slot=\"header\">${category.name}</span>\n                                ${category.results.map((result) => html `\n                                        <sp-menu-item href=\"${result.url}\">\n                                            ${result.label}\n                                        </sp-menu-item>\n                                    `)}\n                            </sp-menu-group>\n                        `)}\n                </sp-menu>\n            `;\n            }\n            else {\n                return html `\n                <sp-illustrated-message\n                    heading=\"No results found\"\n                    description=\"Try another search term.\"\n                ></sp-illustrated-message>\n            `;\n            }\n        }\n        render() {\n            return html `\n            <div id=\"search-container\" @focusout=${this.onFocusout}>\n                <sp-search\n                    id=\"search\"\n                    @focusin=${this.handleSearchInput}\n                    @input=${this.handleSearchInput}\n                    @change=${this.handleSearchInput}\n                    @keydown=${this.handleKeydown}\n                    @click=${stopPropagation}\n                    @submit=${preventDefault}\n                    autocomplete=\"off\"\n                ></sp-search>\n                <sp-popover\n                    id=\"search-results-menu\"\n                    open\n                    tabindex=\"0\"\n                    @sp-overlay-closed=${this.handleClosed}\n                    @keydown=${this.handlePopoverKeydown}\n                >\n                    <style>\n                        #search-results-menu {\n                            width: 368px;\n                            max-height: calc(100vh - 200px);\n                            margin-left: 24px;\n                            display: flex;\n                            flex-direction: column;\n                        }\n\n                        sp-illustrated-message {\n                            flex: 1 1;\n                            margin-bottom: 2em;\n                            color: var(--spectrum-global-color-gray-800);\n                        }\n                    </style>\n                    ${this.renderResults()}\n                </sp-popover>\n                <span\n                    id=\"focus-return\"\n                    tabindex=\"-1\"\n                    @focus=${() => console.log('focused')}\n                    @focusout=${(event) => console.log(event.target, event.relatedTarget)}\n                ></span>\n            </div>\n        `;\n        }\n    };\n    __decorate([\n        query('sp-popover')\n    ], SearchComponent.prototype, \"popover\", void 0);\n    __decorate([\n        query('sp-search')\n    ], SearchComponent.prototype, \"searchField\", void 0);\n    __decorate([\n        query('#focus-return')\n    ], SearchComponent.prototype, \"focusReturn\", void 0);\n    __decorate([\n        property({ type: Array })\n    ], SearchComponent.prototype, \"results\", void 0);\n    SearchComponent = __decorate([\n        customElement('docs-search')\n    ], SearchComponent);\n    return SearchComponent;\n})();\nexport { SearchComponent };\n//# sourceMappingURL=side-nav-search.js.map","import { __decorate } from \"tslib\";\n/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { LitElement, html, property, customElement, } from 'lit-element';\nimport './side-nav-search.js';\nimport sideNavStyles from './side-nav.css';\nimport '@spectrum-web-components/sidenav/sp-sidenav.js';\nimport '@spectrum-web-components/sidenav/sp-sidenav-item.js';\nlet SideNav = /** @class */ (() => {\n    let SideNav = class SideNav extends LitElement {\n        constructor() {\n            super(...arguments);\n            this.open = false;\n        }\n        static get styles() {\n            return [sideNavStyles];\n        }\n        toggle() {\n            this.open = !this.open;\n        }\n        focus() {\n            const target = document.querySelector('[slot=\"logo\"]');\n            if (!target) {\n                this.shadowRoot.querySelector('#logo').focus();\n                return;\n            }\n            target.focus();\n        }\n        render() {\n            return html `\n            <div class=\"scrim\" @click=${this.toggle}></div>\n            <aside>\n                <div id=\"nav-header\">\n                    <div id=\"logo-container\">\n                        <slot name=\"logo\"></slot>\n                    </div>\n                    <docs-search></docs-search>\n                </div>\n                <div class=\"navigation\">\n                    <slot></slot>\n                </div>\n            </aside>\n        `;\n        }\n        updated(changes) {\n            if (changes.has('open') && !this.open && changes.get('open')) {\n                this.dispatchEvent(new Event('close'));\n            }\n        }\n    };\n    __decorate([\n        property({ type: Boolean, reflect: true })\n    ], SideNav.prototype, \"open\", void 0);\n    SideNav = __decorate([\n        customElement('docs-side-nav')\n    ], SideNav);\n    return SideNav;\n})();\nexport { SideNav };\n//# sourceMappingURL=side-nav.js.map","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { __decorate } from \"tslib\";\nimport { LitElement, html, property, customElement, } from 'lit-element';\nimport logoStyles from './adobe-logo.css';\nlet SpectrumLogo = /** @class */ (() => {\n    let SpectrumLogo = class SpectrumLogo extends LitElement {\n        constructor() {\n            super(...arguments);\n            this.size = '36px';\n        }\n        static get styles() {\n            return [logoStyles];\n        }\n        render() {\n            return html `\n            <svg\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                x=\"0\"\n                y=\"0\"\n                viewBox=\"0 0 30 26\"\n                width=\"${this.size}\"\n                xml:space=\"preserve\"\n            >\n                <path\n                    fill=\"#e1251b\"\n                    d=\"M19 0h11v26zM11.1 0H0v26zM15 9.6L22.1 26h-4.6l-2.1-5.2h-5.2z\"\n                />\n            </svg>\n        `;\n        }\n    };\n    __decorate([\n        property({ type: String })\n    ], SpectrumLogo.prototype, \"size\", void 0);\n    SpectrumLogo = __decorate([\n        customElement('docs-spectrum-logo')\n    ], SpectrumLogo);\n    return SpectrumLogo;\n})();\nexport { SpectrumLogo };\n//# sourceMappingURL=adobe-logo.js.map","import { html, css } from 'lit-element';\nexport function toHtmlTemplateString(code) {\n    const stringArray = [`${code}`];\n    stringArray.raw = [`${code}`];\n    return html(stringArray);\n}\nexport function toCssTemplateString(code) {\n    const stringArray = [`${code}`];\n    stringArray.raw = [`${code}`];\n    return css(stringArray);\n}\n//# sourceMappingURL=templates.js.map","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { __decorate } from \"tslib\";\nimport { LitElement, html, customElement, property, css, query, } from 'lit-element';\nimport { toHtmlTemplateString } from '../utils/templates.js';\nimport DarkThemeStyles from 'prismjs/themes/prism-okaidia.css';\nimport LightThemeStyles from 'prismjs/themes/prism.css';\nimport Styles from './code-example.css';\nlet Code = /** @class */ (() => {\n    class Code extends LitElement {\n        constructor() {\n            super(...arguments);\n            this.code = '';\n        }\n        get highlightedCode() {\n            return toHtmlTemplateString(this.code);\n        }\n        render() {\n            return html `\n            <pre><code>${this.highlightedCode}</code></pre>\n        `;\n        }\n    }\n    __decorate([\n        property()\n    ], Code.prototype, \"code\", void 0);\n    return Code;\n})();\nlet DarkCode = /** @class */ (() => {\n    let DarkCode = class DarkCode extends Code {\n        static get styles() {\n            return [\n                DarkThemeStyles,\n                css `\n                .token.constant,\n                .token.deleted,\n                .token.property,\n                .token.symbol,\n                .token.tag {\n                    color: #f9a4c3;\n                }\n            `,\n            ];\n        }\n    };\n    DarkCode = __decorate([\n        customElement('dark-code')\n    ], DarkCode);\n    return DarkCode;\n})();\nexport { DarkCode };\nlet LightCode = /** @class */ (() => {\n    let LightCode = class LightCode extends Code {\n        static get styles() {\n            return [\n                LightThemeStyles,\n                css `\n                .token.attr-name,\n                .token.builtin,\n                .token.char,\n                .token.inserted,\n                .token.selector,\n                .token.string {\n                    color: #567f01;\n                }\n                .token.punctuation {\n                    color: #737373;\n                }\n                .language-css .token.function {\n                    color: inherit;\n                }\n            `,\n            ];\n        }\n    };\n    LightCode = __decorate([\n        customElement('light-code')\n    ], LightCode);\n    return LightCode;\n})();\nexport { LightCode };\nlet CodeExample = /** @class */ (() => {\n    let CodeExample = class CodeExample extends LitElement {\n        constructor() {\n            super(...arguments);\n            this.codeTheme = 'light';\n            this.preprocessed = false;\n            this.prismjsLoaded = false;\n            this.shouldManageTabOrderForScrolling = () => {\n                [this.markup, this.demo].map((el) => {\n                    if (!el)\n                        return;\n                    const { offsetWidth, scrollWidth } = el;\n                    if (offsetWidth < scrollWidth) {\n                        el.tabIndex = 0;\n                    }\n                    else {\n                        el.removeAttribute('tabindex');\n                    }\n                });\n            };\n        }\n        static get styles() {\n            return [Styles];\n        }\n        get codeSlot() {\n            const code = [...(this.children || [])].find((child) => child.slot === 'code');\n            return code || this;\n        }\n        get highlightedHTML() {\n            const el = this.codeSlot;\n            return el.innerHTML || '';\n        }\n        get liveHTML() {\n            const el = this.codeSlot;\n            return el.textContent || '';\n        }\n        get language() {\n            if (this.classList.contains('language-javascript')) {\n                return 'javascript';\n            }\n            return 'markup';\n        }\n        get showDemo() {\n            return (this.classList.contains('language-html') ||\n                this.classList.contains('language-html-live'));\n        }\n        get highlightedCode() {\n            const highlightedHTML = this.preprocessed\n                ? this.highlightedHTML\n                : window.Prism.highlight(this.liveHTML, window.Prism.languages[this.language], this.language);\n            if (this.codeTheme === 'dark') {\n                return html `\n                <dark-code .code=${highlightedHTML}></dark-code>\n            `;\n            }\n            return html `\n            <light-code .code=${highlightedHTML}></light-code>\n        `;\n        }\n        get renderedCode() {\n            if (this.classList.contains('language-html-live')) {\n                const demo = this.querySelector('[slot=\"demo\"]') ||\n                    document.createElement('div');\n                demo.slot = 'demo';\n                demo.innerHTML = this.liveHTML;\n                this.append(demo);\n            }\n            return toHtmlTemplateString(this.liveHTML);\n        }\n        shouldUpdate() {\n            if (this.preprocessed || this.prismjsLoaded) {\n                return true;\n            }\n            if (!this.preprocessed) {\n                import('prismjs').then(() => {\n                    this.prismjsLoaded = true;\n                    this.requestUpdate();\n                });\n            }\n            return false;\n        }\n        render() {\n            // highlighedCode needs to happen first in case the HTML is live and\n            // needs to be placed into the light DOM\n            const { highlightedCode, renderedCode } = this;\n            return html `\n            ${this.showDemo\n                ? html `\n                      <div class=\"demo-example\">\n                          <slot name=\"demo\">\n                              ${renderedCode}\n                          </slot>\n                      </div>\n                  `\n                : undefined}\n            <div class=\"markup\">\n                ${highlightedCode}\n            </div>\n        `;\n        }\n        updated() {\n            setTimeout(this.shouldManageTabOrderForScrolling);\n        }\n        connectedCallback() {\n            super.connectedCallback();\n            window.addEventListener('resize', this.shouldManageTabOrderForScrolling);\n        }\n        disconnectedCallback() {\n            window.removeEventListener('resize', this.shouldManageTabOrderForScrolling);\n            super.disconnectedCallback();\n        }\n    };\n    __decorate([\n        query('#markup')\n    ], CodeExample.prototype, \"markup\", void 0);\n    __decorate([\n        query('.demo-example')\n    ], CodeExample.prototype, \"demo\", void 0);\n    __decorate([\n        property()\n    ], CodeExample.prototype, \"codeTheme\", void 0);\n    __decorate([\n        property({ type: Boolean })\n    ], CodeExample.prototype, \"preprocessed\", void 0);\n    CodeExample = __decorate([\n        customElement('code-example')\n    ], CodeExample);\n    return CodeExample;\n})();\nexport { CodeExample };\n//# sourceMappingURL=code-example.js.map","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { __decorate } from \"tslib\";\nimport { html, property, LitElement, } from 'lit-element';\nimport '@spectrum-web-components/theme/sp-theme.js';\nimport '@spectrum-web-components/dropdown/sp-dropdown.js';\nimport '@spectrum-web-components/button/sp-button.js';\nimport '@spectrum-web-components/button/sp-action-button.js';\nimport '@spectrum-web-components/menu/sp-menu.js';\nimport '@spectrum-web-components/menu/sp-menu-item.js';\nimport '@spectrum-web-components/link/sp-link.js';\nimport '@spectrum-web-components/rule/sp-rule.js';\nimport './side-nav.js';\nimport './adobe-logo.js';\nimport './code-example.js';\nimport layoutStyles from './layout.css';\nimport fontStyles from './fonts.css';\nfunction loadTypekit() {\n    const { connection } = window.navigator;\n    const hasActiveServiceWorker = 'serviceWorker' in navigator &&\n        navigator.serviceWorker.controller &&\n        navigator.serviceWorker.controller.state === 'activated';\n    if (connection &&\n        (connection.saveData || connection.effectiveType !== '4g') &&\n        !hasActiveServiceWorker) {\n        return;\n    }\n    const fonts = document.createElement('style');\n    fonts.textContent = fontStyles.cssText;\n    document.head.append(fonts);\n}\nconst SWC_THEME_COLOR_KEY = 'swc-docs:theme:color';\nconst SWC_THEME_SCALE_KEY = 'swc-docs:theme:scale';\nconst COLOR_FALLBACK = matchMedia('(prefers-color-scheme: dark)').matches\n    ? 'dark'\n    : 'light';\nconst SCALE_MEDIUM = 'medium';\nconst DEFAULT_COLOR = (window.localStorage\n    ? localStorage.getItem(SWC_THEME_COLOR_KEY) || COLOR_FALLBACK\n    : COLOR_FALLBACK);\nconst DEFAULT_SCALE = (window.localStorage\n    ? localStorage.getItem(SWC_THEME_SCALE_KEY) || SCALE_MEDIUM\n    : SCALE_MEDIUM);\nconst isNarrowMediaQuery = matchMedia('screen and (max-width: 960px)');\nconst lazyStyleFragment = (name) => {\n    switch (name) {\n        case 'darkest':\n            import('@spectrum-web-components/theme/theme-darkest.js');\n            break;\n        case 'dark':\n            import('@spectrum-web-components/theme/theme-dark.js');\n            break;\n        case 'light':\n            import('@spectrum-web-components/theme/theme-light.js');\n            break;\n        case 'lightest':\n            import('@spectrum-web-components/theme/theme-lightest.js');\n            break;\n        case 'medium':\n            import('@spectrum-web-components/theme/scale-medium.js');\n            break;\n        case 'large':\n            import('@spectrum-web-components/theme/scale-large.js');\n            break;\n    }\n};\nconst loadDefaults = () => {\n    if (DEFAULT_COLOR !== COLOR_FALLBACK || DEFAULT_SCALE !== SCALE_MEDIUM) {\n        lazyStyleFragment(DEFAULT_COLOR);\n        lazyStyleFragment(DEFAULT_SCALE);\n    }\n};\nconst hasActiveServiceWorker = 'serviceWorker' in navigator &&\n    navigator.serviceWorker.controller &&\n    navigator.serviceWorker.controller.state === 'activated';\nif (hasActiveServiceWorker) {\n    loadTypekit();\n}\n// @customElement('docs-page')\nlet LayoutElement = /** @class */ (() => {\n    class LayoutElement extends LitElement {\n        constructor() {\n            super(...arguments);\n            this.color = DEFAULT_COLOR;\n            this.open = false;\n            this.isNarrow = isNarrowMediaQuery.matches;\n            this.scale = DEFAULT_SCALE;\n            this.handleMatchMediaChange = (event) => {\n                this.isNarrow = event.matches;\n            };\n        }\n        static get styles() {\n            return [layoutStyles];\n        }\n        toggleNav() {\n            this.open = !this.open;\n        }\n        updateColor(event) {\n            this.color = event.target.value;\n        }\n        updateScale(event) {\n            this.scale = event.target.value;\n        }\n        // TODO: remove this manual link relationship when\n        // https://github.com/adobe/spectrum-web-components/issues/475\n        // has been completed and links are natively part of the library\n        onClickLabel(event) {\n            const { target } = event;\n            if (!target)\n                return;\n            const next = target.nextElementSibling;\n            if (!next || next.open)\n                return;\n            next.click();\n        }\n        focus() {\n            this.shadowRoot.querySelector('docs-side-nav').focus();\n        }\n        render() {\n            return html `\n            <sp-theme .color=${this.color} .scale=${this.scale} id=\"app\">\n                ${this.isNarrow\n                ? html `\n                          <header>\n                              <sp-action-button\n                                  quiet\n                                  label=\"Open Navigation\"\n                                  @click=${this.toggleNav}\n                              >\n                                  <svg\n                                      slot=\"icon\"\n                                      viewBox=\"0 0 36 36\"\n                                      focusable=\"false\"\n                                      aria-hidden=\"true\"\n                                      role=\"img\"\n                                      width=\"22\"\n                                      height=\"22\"\n                                      fill=\"currentColor\"\n                                  >\n                                      <rect\n                                          height=\"4\"\n                                          rx=\"1\"\n                                          ry=\"1\"\n                                          width=\"28\"\n                                          x=\"4\"\n                                          y=\"16\"\n                                      ></rect>\n                                      <rect\n                                          height=\"4\"\n                                          rx=\"1\"\n                                          ry=\"1\"\n                                          width=\"28\"\n                                          x=\"4\"\n                                          y=\"6\"\n                                      ></rect>\n                                      <rect\n                                          height=\"4\"\n                                          rx=\"1\"\n                                          ry=\"1\"\n                                          width=\"28\"\n                                          x=\"4\"\n                                          y=\"26\"\n                                      ></rect>\n                                  </svg>\n                              </sp-action-button>\n                          </header>\n                      `\n                : html ``}\n                <div id=\"body\">\n                    <docs-side-nav\n                        id=\"side-nav\"\n                        ?inert=${this.isNarrow && !this.open}\n                        ?open=${this.open}\n                        @close=${this.toggleNav}\n                    >\n                        <slot name=\"logo\" slot=\"logo\">\n                            <a id=\"logo\" href=\"index.html\">\n                                <docs-spectrum-logo></docs-spectrum-logo>\n                                <div id=\"header-title\">\n                                    Spectrum\n                                    <br />\n                                    Web&nbsp;Components\n                                </div>\n                            </a>\n                        </slot>\n                        <slot name=\"side-nav\"></slot>\n                    </docs-side-nav>\n                    <main\n                        id=\"layout-content\"\n                        ?inert=${this.isNarrow && this.open}\n                        role=\"main\"\n                    >\n                        <div id=\"page\">\n                            <div class=\"manage-theme\">\n                                <label @click=${this.onClickLabel}>Theme</label>\n                                <sp-dropdown\n                                    placement=\"bottom\"\n                                    quiet\n                                    value=${this.color}\n                                    @change=${this.updateColor}\n                                >\n                                    <sp-menu>\n                                        <sp-menu-item value=\"lightest\">\n                                            Lightest\n                                        </sp-menu-item>\n                                        <sp-menu-item value=\"light\">\n                                            Light\n                                        </sp-menu-item>\n                                        <sp-menu-item value=\"dark\">\n                                            Dark\n                                        </sp-menu-item>\n                                        <sp-menu-item value=\"darkest\">\n                                            Darkest\n                                        </sp-menu-item>\n                                    </sp-menu>\n                                </sp-dropdown>\n                                <label @click=${this.onClickLabel}>Scale</label>\n                                <sp-dropdown\n                                    label=\"Scale\"\n                                    placement=\"bottom\"\n                                    quiet\n                                    value=${this.scale}\n                                    @change=${this.updateScale}\n                                >\n                                    <sp-menu>\n                                        <sp-menu-item value=\"medium\">\n                                            Medium\n                                        </sp-menu-item>\n                                        <sp-menu-item value=\"large\">\n                                            Large\n                                        </sp-menu-item>\n                                    </sp-menu>\n                                </sp-dropdown>\n                            </div>\n                            <slot></slot>\n                        </div>\n                    </main>\n                </div>\n            </sp-theme>\n        `;\n        }\n        firstUpdated() {\n            setTimeout(() => {\n                if (!hasActiveServiceWorker)\n                    loadTypekit();\n                loadDefaults();\n                import('@spectrum-web-components/dropdown/sp-dropdown.js');\n            }, 0);\n        }\n        updated(changes) {\n            let loadStyleFragments = false;\n            if (changes.has('color')) {\n                if (window.localStorage) {\n                    localStorage.setItem(SWC_THEME_COLOR_KEY, this.color);\n                }\n                if (changes.get('color')) {\n                    loadStyleFragments = true;\n                }\n                const examples = [\n                    ...this.querySelectorAll('code-example'),\n                ];\n                examples.forEach((example) => {\n                    example.codeTheme =\n                        this.color === 'dark' || this.color === 'darkest'\n                            ? 'dark'\n                            : 'light';\n                });\n            }\n            if (changes.has('scale')) {\n                if (window.localStorage) {\n                    localStorage.setItem(SWC_THEME_SCALE_KEY, this.scale);\n                }\n                if (changes.get('scale')) {\n                    loadStyleFragments = true;\n                }\n            }\n            if (changes.has('open') && this.open) {\n                this.focus();\n            }\n            if (loadStyleFragments) {\n                lazyStyleFragment(this.color);\n                lazyStyleFragment(this.scale);\n            }\n        }\n        connectedCallback() {\n            super.connectedCallback();\n            isNarrowMediaQuery.addEventListener('change', this.handleMatchMediaChange);\n        }\n        disconnectedCallback() {\n            isNarrowMediaQuery.removeEventListener('change', this.handleMatchMediaChange);\n        }\n    }\n    __decorate([\n        property({ attribute: false })\n    ], LayoutElement.prototype, \"color\", void 0);\n    __decorate([\n        property({ type: Boolean })\n    ], LayoutElement.prototype, \"open\", void 0);\n    __decorate([\n        property({ type: Boolean, attribute: false })\n    ], LayoutElement.prototype, \"isNarrow\", void 0);\n    __decorate([\n        property({ attribute: false })\n    ], LayoutElement.prototype, \"scale\", void 0);\n    return LayoutElement;\n})();\nexport { LayoutElement };\nsetTimeout(() => customElements.define('docs-page', LayoutElement));\n//# sourceMappingURL=layout.js.map"],"names":["stopPropagation","event","preventDefault","SearchComponent","LitElement","constructor","this","searchResultsPopover","results","sideNavSearchMenuStyles","focus","searchField","handleSearchInput","target","value","updateSearchResults","handleKeydown","code","shiftKey","willFocusResultsList","shouldFocusResultsList","focusResults","handlePopoverKeydown","focusReturn","updateComplete","querySelector","popover","then","async","Overlay","closeOverlay","open","placement","closePopover","handleClosed","length","search","searchIndex","searchParam","trim","openPopover","onFocusout","relatedTarget","shadowRoot","contains","renderResults","html","map","category","name","result","url","label","render","console","log","__decorate","query","property","type","Array","customElement","SideNav","sideNavStyles","toggle","document","updated","changes","has","get","dispatchEvent","Event","Boolean","reflect","SpectrumLogo","size","logoStyles","String","toHtmlTemplateString","stringArray","raw","Code","highlightedCode","DarkCode","styles","DarkThemeStyles","css","LightCode","LightThemeStyles","CodeExample","codeTheme","preprocessed","prismjsLoaded","shouldManageTabOrderForScrolling","markup","demo","el","offsetWidth","scrollWidth","tabIndex","removeAttribute","Styles","children","find","child","slot","codeSlot","innerHTML","textContent","classList","highlightedHTML","window","Prism","highlight","liveHTML","languages","language","createElement","append","shouldUpdate","import","requestUpdate","renderedCode","showDemo","undefined","setTimeout","connectedCallback","super","addEventListener","disconnectedCallback","removeEventListener","loadTypekit","connection","navigator","hasActiveServiceWorker","serviceWorker","controller","state","saveData","effectiveType","fonts","fontStyles","cssText","head","COLOR_FALLBACK","matchMedia","matches","DEFAULT_COLOR","localStorage","getItem","DEFAULT_SCALE","isNarrowMediaQuery","lazyStyleFragment","LayoutElement","color","isNarrow","scale","handleMatchMediaChange","layoutStyles","toggleNav","updateColor","updateScale","onClickLabel","next","nextElementSibling","click","firstUpdated","loadStyleFragments","setItem","querySelectorAll","forEach","example","attribute","customElements","define"],"mappings":"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"}